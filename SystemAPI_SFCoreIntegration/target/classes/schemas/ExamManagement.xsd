<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema attributeFormDefault="unqualified" elementFormDefault="qualified"
    targetNamespace="http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/4.3" version="4.3"
    xmlns="http://va.gov/vler/schemas/vlerSupersetSchema/examManagement/4.3"
    xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xs:complexType abstract="true" name="ExamManagementEventType">
        <xs:annotation>
            <xs:documentation>Base abstract class for any sort of Exam Management event.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Details" type="xs:string"/>
            <xs:element form="qualified" name="EventSource" type="ParticipatingSystemType"/>
        </xs:sequence>
        <xs:attribute name="eventUuid" type="UuidType" use="required"/>
        <xs:attribute name="previousEventUuid" type="UuidType" use="required"/>
        <xs:attribute name="eventDtg" type="xs:dateTime" use="required"/>
        <xs:attribute name="modelVersion" type="xs:string" use="required"/>
        <xs:attribute name="examSchedulingRequestUuid" type="UuidType" use="required"/>
    </xs:complexType>
    <!-- ======================================================= -->
    <!-- =======================================================
         Fault stuff
         ======================================================= -->
    <!-- ======================================================= -->
    <xs:element abstract="true" name="FaultEvent" type="FaultEventType"/>
    <xs:complexType name="FaultEventType">
        <xs:annotation>
            <xs:documentation>A generic type meant for un-scoped faults. For this event, use
                the previousEventUuid to designate the UUID of the "offending" event.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ExamManagementEventType">
                <xs:attributeGroup ref="FaultDetailsAttributeGroup"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:attributeGroup name="FaultDetailsAttributeGroup">
        <xs:attribute name="systemReference" type="xs:string" use="optional"/>
    </xs:attributeGroup>
    <xs:complexType name="TransportFaultEventType">
        <xs:annotation>
            <xs:documentation>Used to provide information on an Event Package transport error.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="FaultEventType">
                <xs:attribute name="internalMessageId" type="xs:string" use="required"/>
                <xs:attribute name="eventPackageType" type="xs:string" use="required"/>
                <xs:attribute name="eventPackageStatus" type="xs:string" use="required"/>
                <xs:attribute name="errorMessage" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- ======================================================= -->
    <!-- =======================================================
         MISC
         ======================================================= -->
    <!-- ======================================================= -->
    <xs:simpleType name="ExamReworkReasonType">
        <xs:annotation>
            <xs:documentation>Reason that the previous exam was insufficient, or needs
                clarification.             </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="Case required exam by a specialist"/>
            <xs:enumeration value="Conflicting information in report"/>
            <xs:enumeration value="Failed to address all conditions requested"/>
            <xs:enumeration value="Failed to comply with BVA remand instructions"/>
            <xs:enumeration value="Failed to provide diagnosis"/>
            <xs:enumeration value="Failed to provide medical opinion"/>
            <xs:enumeration value="Failed to provide rationale"/>
            <xs:enumeration value="Failed to provide requested or required information"/>
            <xs:enumeration value="In person examination was not performed"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="ParticipatingSystemType">
        <xs:attribute name="participatingSystemName" type="ParticipatingSystemNameType"
            use="required"/>
        <xs:attribute name="contractorName" type="xs:string">
            <xs:annotation>
                <xs:documentation>When the participatingSystemName is "VBA Contractor," this
                    designates which                 contractor (e.g., QTC, VetFed, or VES). Do not
                    use for other participating systems.                 </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="CodeNamePairType">
        <xs:attribute name="code" type="xs:string" use="required"/>
        <!-- machine-readable -->
        <xs:attribute name="name" type="xs:string" use="required"/>
        <!-- human-readable description -->
    </xs:complexType>
    <xs:simpleType name="ParticipatingSystemNameType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="VBMS"/>
            <xs:enumeration value="VBA Contractor"/>
            <xs:enumeration value="VHA"/>
            <xs:enumeration value="VHA CAPRI"/>
            <xs:enumeration value="VHA CERNER"/>
            <xs:enumeration value="DAS"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="AddressType">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="1" name="Address1" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="Address2" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="Address3" type="xs:string"/>
            <xs:element form="qualified" name="City" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="State" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="ZipOrPostalCode" type="xs:string"/>
            <xs:element form="qualified" name="Country" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="MilitaryPO" type="MilitaryPOType"/>
            <xs:element form="qualified" minOccurs="0" name="MilitaryPostalCode"
                type="MilitaryPostalType"/>
        </xs:sequence>
        <xs:attribute name="description" type="xs:string">
            <xs:annotation>
                <xs:documentation>Indicates what type of address (home, vacation home, temporary,
                    facility, etc.)                 </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="PreferredGeographicLocationType">
        <xs:complexContent>
            <xs:extension base="AddressType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="MilitaryPOType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="APO"/>
            <xs:enumeration value="DPO"/>
            <xs:enumeration value="FPO"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="MilitaryPostalType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="AA"/>
            <xs:enumeration value="AE"/>
            <xs:enumeration value="AP"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="AssigningAuthorityType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="2.16.840.1.113883.6.349">
                <xs:annotation>
                    <xs:documentation>Department of Veterans Affairs</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="2.16.840.1.113883.3.62.10001.100001.12">
                <xs:annotation>
                    <xs:documentation>Department of Defense</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="2.16.840.1.113883.3.184">
                <xs:annotation>
                    <xs:documentation>Social Security Administration</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="BenefitType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="CP Live"/>
            <xs:enumeration value="CP Death"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="BilateralIndicatorType">
        <xs:annotation>
            <xs:documentation>Which region of the body is affected.             </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="RL">
                <xs:annotation>
                    <xs:documentation>Right Lower</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LL">
                <xs:annotation>
                    <xs:documentation>Left Lower</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="RU">
                <xs:annotation>
                    <xs:documentation>Right Upper</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LU">
                <xs:annotation>
                    <xs:documentation>Left Upper</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BL">
                <xs:annotation>
                    <xs:documentation>Both Lower</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BU">
                <xs:annotation>
                    <xs:documentation>Both Upper</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="CauseOfDeathType">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="PrincipalCauseOfDeath" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="ContributingCauseOfDeath"
                type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="DisabilitiesDescription"
                type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="OccupationSpecialty" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="deathType" type="DeathType"/>
    </xs:complexType>
    <xs:simpleType name="DeathType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="ServiceConnectionForCauseOfDeath"/>
            <xs:enumeration value="ServiceConnectionByVitalOrgan"/>
            <xs:enumeration value="ServiceConnectionByUsc1151"/>
            <xs:enumeration value="AsbestosExposure"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="ErasOfServiceCollection">
        <xs:sequence>
            <xs:choice>
                <xs:element form="qualified" name="PeacetimeEra" type="PeacetimeEraType"/>
                <xs:element form="qualified" maxOccurs="7" name="Era" type="EraOfServiceType"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="EraOfServiceType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="American"/>
            <xs:enumeration value="Indian"/>
            <xs:enumeration value="WWI"/>
            <xs:enumeration value="WWII"/>
            <xs:enumeration value="Korean"/>
            <xs:enumeration value="Vietnam"/>
            <xs:enumeration value="Gulf War"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="PersonNameType">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Prefix" type="xs:string"/>
            <xs:element form="qualified" name="FirstName" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="MiddleName" type="xs:string"/>
            <xs:element form="qualified" name="LastName" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="Suffix" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="PeacetimeEraType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Peacetime"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="ExamRelatedClaimStatusType">
        <!-- TODO: Not used; eliminate? -->
        <xs:annotation>
            <xs:documentation>Status of the claim associated with the contention(s)
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="Cancelled"/>
            <xs:enumeration value="Closed"/>
            <xs:enumeration value="New"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="FacilityType">
        <xs:sequence>
            <xs:element form="qualified" name="Address" type="AddressType"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="assigningAuthority" type="AssigningAuthorityType"/>
        <xs:attribute name="phone" type="xs:string"/>
    </xs:complexType>
    <xs:simpleType name="GenderType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Male"/>
            <xs:enumeration value="Female"/>
            <xs:enumeration value="Undifferentiated"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="ServiceConnectedDisabilityCollectionType">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="5" name="Disability"
                type="ServiceConnectedDisabilityType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ServiceConnectedDisabilityType">
        <xs:annotation>
            <xs:documentation>Injuries or diseases that occurred while on active duty, or aggravated
                by active military service.             </xs:documentation>
        </xs:annotation>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="percentage" type="xs:int" use="required"/>
        <xs:attribute name="diagnosticCode" type="xs:string" use="required"/>
        <xs:attribute name="bilateralIndicator" type="BilateralIndicatorType"/>
    </xs:complexType>
    <xs:simpleType name="SsnTokenType">
        <xs:restriction base="xs:token">
            <xs:pattern
                value="[0-9]{3}-[0-9]{2}-[0-9]{4}|[0-9]{3}-[0-9]{2}-[0-9]{4}[Pp]{1}|[0-9]{9}[Pp]{1}|[0-9]{9}"
            />
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="SsnType">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Value" type="SsnTokenType"/>
        </xs:sequence>
        <xs:attribute name="assigningAuthority" type="AssigningAuthorityType"/>
    </xs:complexType>
    <xs:complexType name="UuidCollection">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="5" name="UuidValue" type="UuidType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="UuidType">
        <xs:restriction base="xs:string">
            <xs:pattern
                value="[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
            />
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="StringCollection">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="5" name="StringValue" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="PhoneType">
        <xs:attribute name="primaryPhone" type="xs:string" use="required"/>
        <xs:attribute name="alternatePhone" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="IntegrationControlNumberType">
        <xs:sequence minOccurs="0">
            <xs:element form="qualified" minOccurs="0" name="Value" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="assigningAuthority" type="AssigningAuthorityType"/>
    </xs:complexType>
    <xs:complexType name="PeriodOfServiceCollection">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="5" name="Period" type="PeriodOfServiceType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="PeriodOfServiceType">
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="Eras" type="ErasOfServiceCollection"/>
        </xs:sequence>
        <xs:attribute name="branchOfService" type="xs:string" use="required"/>
        <xs:attribute name="entryOnDuty" type="xs:date" use="required"/>
        <xs:attribute name="radDate" type="xs:date"/>
    </xs:complexType>
    <xs:complexType name="PersonType">
        <xs:annotation>
            <xs:documentation>                 Abstract type that several types extend (e.g.,
                PebloType, MscType)             </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" name="Address" type="AddressType"/>
            <xs:element form="qualified" name="Phone" type="PhoneType"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="emailAddress" type="xs:string"/>
        <xs:attribute name="fax" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="VsmType">
        <xs:annotation>
            <!--TODO: "Does not extend person type bc/ it handles several elements (name, address) in specialized ways-->
            <xs:documentation>Data pertaining to a Veteran Service Member (VSM)
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice>
                <xs:element form="qualified" name="PreferredGeographicLocation"
                    type="PreferredGeographicLocationType"/>
                <xs:element form="qualified" minOccurs="0" name="Address" type="AddressType"/>
            </xs:choice>
            <xs:element form="qualified" minOccurs="0" name="Phone" type="PhoneType"/>
            <xs:element form="qualified" minOccurs="0" name="IntegrationControlNumber"
                type="IntegrationControlNumberType"/>
            <xs:element form="qualified" name="PeriodsOfService" type="PeriodOfServiceCollection"/>
            <xs:element form="qualified" minOccurs="0" name="PoaVso" type="PoaVsoType"/>
        </xs:sequence>
        <xs:attribute name="EDIPI" type="xs:string"/>
        <xs:attribute name="fullName" type="xs:string" use="required"/>
        <xs:attribute name="lastName" type="xs:string" use="required"/>
        <xs:attribute name="firstName" type="xs:string" use="required"/>
        <xs:attribute name="middleName" type="xs:string"/>
        <xs:attribute name="gender" type="GenderType" use="required"/>
        <xs:attribute name="dateOfBirth" type="xs:date" use="required"/>
        <xs:attribute name="dateOfDeath" type="xs:date"/>
        <xs:attribute name="regionalOfficeCode" type="xs:string"/>
        <xs:attribute name="emailAddress" type="xs:string"/>
        <xs:attribute name="fileNumber" type="xs:string" use="required"/>
        <xs:attribute name="pregnant" type="xs:boolean"/>
    </xs:complexType>
    <xs:complexType name="SadType">
        <xs:annotation>
            <!--TODO: "Does not extend person type bc/ it handles several elements (name, address) in specialized ways-->
            <xs:documentation>Data pertaining to a Survivor and Dependent (SaD)
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:choice>
                <xs:element form="qualified" minOccurs="0" name="PreferredGeographicLocation"
                    type="PreferredGeographicLocationType"/>
                <xs:element form="qualified" minOccurs="0" name="Address" type="AddressType"/>
            </xs:choice>
            <xs:element form="qualified" minOccurs="0" name="Phone" type="PhoneType"/>
            <xs:element form="qualified" minOccurs="0" name="PoaVso" type="PoaVsoType"/>
        </xs:sequence>
        <xs:attribute name="fullName" type="xs:string" use="required"/>
        <xs:attribute name="lastName" type="xs:string" use="required"/>
        <xs:attribute name="firstName" type="xs:string" use="required"/>
        <xs:attribute name="middleName" type="xs:string"/>
        <xs:attribute name="gender" type="GenderType" use="required"/>
        <xs:attribute name="emailAddress" type="xs:string"/>
        <xs:attribute name="dateOfBirth" type="xs:date" use="required"/>
        <xs:attribute name="code" type="SadCodeType" use="required"/>
    </xs:complexType>
    <xs:complexType name="PoaVsoType">
        <xs:sequence>
            <xs:element form="qualified" name="Name" type="xs:string"/>
            <xs:element form="qualified" name="Code" type="xs:string"/>
            <xs:element form="qualified" minOccurs="0" name="Address" type="AddressType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="NarrativeCollectionType">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="5" minOccurs="0" name="NarrativeEntry"
                type="NarrativeTextType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="NarrativeTextType">
        <xs:annotation>
            <xs:documentation>Boilerplate text that accompanies certain types.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="title" type="xs:string"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="AlternateDestinationJustificationType">
        <xs:annotation>
            <xs:documentation>                 Description of the reason for choosing an alternate
                location of destination.             </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <!-- Document Attachment -->
    <xs:complexType name="DocumentAttachmentType">
        <xs:annotation>
            <xs:documentation>                 A data type for a digital representation of an object
                encoded in a binary format (base64).             </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="1" minOccurs="1" name="CreateDate"
                type="xs:dateTime"/>
            <xs:element form="qualified" maxOccurs="1" minOccurs="1" name="LastModifiedDate"
                type="xs:dateTime"/>
            <xs:element form="qualified" maxOccurs="1" minOccurs="1" name="DocumentId"
                type="xs:string"/>
            <xs:element form="qualified" maxOccurs="1" minOccurs="0" name="DocumentTitle"
                type="xs:string"/>
            <xs:element form="qualified" maxOccurs="1" minOccurs="0" name="DocumentSubject"
                type="xs:string"/>
            <xs:element form="qualified" maxOccurs="1" minOccurs="1" name="DocumentType"
                type="xs:string"/>
            <xs:element form="qualified" maxOccurs="1" minOccurs="1" name="DocumentBinary"
                type="xs:base64Binary"/>
            <xs:element form="qualified" maxOccurs="1" minOccurs="1" name="FileSizeBytes"
                type="xs:int"/>
            <xs:element form="qualified" maxOccurs="1" minOccurs="1" name="MimeType"
                type="xs:string"/>
            <xs:element form="qualified" maxOccurs="1" minOccurs="1" name="Sha256Hash"
                type="xs:string"/>
        </xs:sequence>
    </xs:complexType>
    <!-- Document Annotation -->
    <xs:element name="DocumentAnnotation" type="DocumentAnnotationType"/>
    <xs:complexType name="DocumentAnnotationType">
        <xs:annotation>
            <xs:documentation>                 Used to provide annotation information related to a
                document.                  Current Types: Circle, Highlight, STAMP, Underline,
                StrikeOut, FreeText, Text, SQUARE,                 CIRCLE, Freetext, Strikeout,
                CONTENTION, stamp.vbms.Certified, stamp.vbms.Original, Line,
                FREETEXT, LINE, Square, NOTE, CALLOUT, Stamp, Note, and stamp.vbms.BestCopy.
                Note: Content includes xml with nested <![CDATA[...]]>. See:
                https://stackoverflow.com/questions/8123864/nesting-xml-cdata-into-a-xml-file
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="1" minOccurs="1" name="Text" type="xs:string"/>
            <xs:element form="qualified" maxOccurs="1" minOccurs="1" name="Content" type="xs:string"
            />
        </xs:sequence>
        <xs:attribute name="type" type="xs:string" use="required"/>
        <xs:attribute name="createDate" type="xs:dateTime" use="required"/>
        <xs:attribute name="lastModifiedDate" type="xs:dateTime" use="required"/>
    </xs:complexType>
    <!-- Document Bookmark -->
    <xs:element name="DocumentBookmark" type="DocumentBookmarkType"/>
    <xs:complexType name="DocumentBookmarkType">
        <xs:annotation>
            <xs:documentation>                 Used to provide bookmark information related to a
                document.                 Current Types: Medical, Appeals, Peer Review, Working
                Notes, Deferral, and Dependency.                 Current Realms: VBA, BVA, VSO
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="type" type="xs:string" use="required"/>
        <xs:attribute name="realm" type="xs:string" use="required"/>
        <xs:attribute name="comments" type="xs:string" use="required"/>
        <xs:attribute name="createDate" type="xs:dateTime" use="required"/>
        <xs:attribute name="lastModifiedDate" type="xs:dateTime" use="required"/>
    </xs:complexType>
    <xs:simpleType name="PreferredExaminerGenderIndicatorEnumeration">
        <xs:annotation>
            <xs:documentation>                 Claimant's preferred Examiner's gender indicator
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="Yes"/>
            <xs:enumeration value="No"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="PreferredExaminerGenderEnumeration">
        <xs:annotation>
            <xs:documentation>                 Claimant's preferred Examiner's gender
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="Male"/>
            <xs:enumeration value="Female"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="SadCodeType">
        <xs:restriction base="xs:string">
            <xs:maxLength value="2"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ======================================================= -->
    <!-- =======================================================

         MedicalOpinion Substitution Group

         ======================================================= -->
    <!-- ======================================================= -->
    <xs:complexType name="MedicalOpinionRequestCollection">
        <xs:sequence>
            <xs:element maxOccurs="5" ref="MedicalOpinionRequest"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element abstract="true" name="MedicalOpinionRequest" type="MedicalOpinionRequestType"/>
    <xs:complexType abstract="true" name="MedicalOpinionRequestType">
        <xs:complexContent>
            <xs:extension base="NarrativeCollectionType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="ConflictingMedicalEvidenceReconciliation"
        substitutionGroup="MedicalOpinionRequest"
        type="ConflictingMedicalEvidenceReconciliationType"/>
    <xs:complexType name="ConflictingMedicalEvidenceReconciliationType">
        <xs:complexContent>
            <xs:extension base="MedicalOpinionRequestType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="TabbedEvidence" substitutionGroup="MedicalOpinionRequest"
        type="TabbedEvidenceType"/>
    <xs:complexType name="TabbedEvidenceType">
        <xs:complexContent>
            <xs:extension base="MedicalOpinionRequestType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="ToxicExposure" substitutionGroup="MedicalOpinionRequest"
        type="ToxicExposureType"/>
    <xs:complexType name="ToxicExposureType">
        <xs:complexContent>
            <xs:extension base="MedicalOpinionRequestType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="AggravationOfNonServiceConnectedDisabilityByServiceConnectedDisability"
        substitutionGroup="MedicalOpinionRequest"
        type="AggravationOfNonServiceConnectedDisabilityByServiceConnectedDisabilityType"/>
    <xs:complexType
        name="AggravationOfNonServiceConnectedDisabilityByServiceConnectedDisabilityType">
        <xs:complexContent>
            <xs:extension base="MedicalOpinionRequestType">
                <xs:sequence>
                    <xs:element form="qualified" name="RelatedDisabilities"
                        type="ServiceConnectedDisabilityCollectionType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="AggravationOfPreexistingCondition" substitutionGroup="MedicalOpinionRequest"
        type="AggravationOfPreexistingConditionType"/>
    <xs:complexType name="AggravationOfPreexistingConditionType">
        <xs:complexContent>
            <xs:extension base="MedicalOpinionRequestType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="AidAndAttendance" substitutionGroup="MedicalOpinionRequest"
        type="AidAndAttendanceType"/>
    <xs:complexType name="AidAndAttendanceType">
        <xs:complexContent>
            <xs:extension base="MedicalOpinionRequestType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="MosLanguage" substitutionGroup="MedicalOpinionRequest" type="MosLanguageType"/>
    <!--TODO: not a med opin req -->
    <xs:complexType name="MosLanguageType">
        <xs:complexContent>
            <xs:extension base="MedicalOpinionRequestType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="DirectServiceConnection" substitutionGroup="MedicalOpinionRequest"
        type="DirectServiceConnectionType"/>
    <xs:complexType name="DirectServiceConnectionType">
        <xs:complexContent>
            <xs:extension base="MedicalOpinionRequestType">
                <xs:attribute name="nameOfInServiceInjuryOrEvent" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="GeneralMedicalGulfWarOpinion" substitutionGroup="MedicalOpinionRequest"
        type="GeneralMedicalGulfWarOpinionType"/>
    <xs:complexType name="GeneralMedicalGulfWarOpinionType">
        <xs:complexContent>
            <xs:extension base="MedicalOpinionRequestType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="Respiratory" substitutionGroup="MedicalOpinionRequest" type="RespiratoryType"/>
    <xs:complexType name="RespiratoryType">
        <xs:complexContent>
            <xs:extension base="MedicalOpinionRequestType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="SecondaryServiceConnection" substitutionGroup="MedicalOpinionRequest"
        type="SecondaryServiceConnectionType"/>
    <xs:complexType name="SecondaryServiceConnectionType">
        <xs:complexContent>
            <xs:extension base="MedicalOpinionRequestType">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="RelatedDisabilities"
                        type="ServiceConnectedDisabilityCollectionType">
                        <xs:annotation>
                            <xs:documentation>                                 Only needed when
                                medicalOpinion::medicalOpinionType is SecondaryServiceConnection
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <!-- TODO: this needs to be maxOccurs="1" -->
                    <xs:element form="qualified" maxOccurs="5" minOccurs="0"
                        name="RelatedContentions" type="StringCollection">
                        <xs:annotation>
                            <xs:documentation>                                 Only needed when
                                medicalOpinion::medicalOpinionType is SecondaryServiceConnection
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="CauseOfDeathBasedOnMosRelatedAsbestosExposureNavyOnly"
        substitutionGroup="MedicalOpinionRequest"
        type="CauseOfDeathBasedOnMosRelatedAsbestosExposureNavyOnlyType"/>
    <xs:complexType name="CauseOfDeathBasedOnMosRelatedAsbestosExposureNavyOnlyType">
        <xs:complexContent>
            <xs:extension base="MedicalOpinionRequestType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="ServiceConnectionForTheCauseOfDeathBasedOnServiceConnectedDisability"
        substitutionGroup="MedicalOpinionRequest"
        type="ServiceConnectionForTheCauseOfDeathBasedOnServiceConnectedDisabilityType"/>
    <xs:complexType name="ServiceConnectionForTheCauseOfDeathBasedOnServiceConnectedDisabilityType">
        <xs:complexContent>
            <xs:extension base="MedicalOpinionRequestType">
                <xs:sequence>
                    <xs:element form="qualified" name="AllServiceConnectedDisabilities"
                        type="ServiceConnectedDisabilityCollectionType"/>
                    <xs:element form="qualified" maxOccurs="5" minOccurs="0"
                        name="SelectedContentions" type="StringCollection"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="ServiceConnectionForTheCauseOfDeathProvidingServiceConnectedNexus"
        substitutionGroup="MedicalOpinionRequest"
        type="ServiceConnectionForTheCauseOfDeathProvidingServiceConnectedNexusType"/>
    <xs:complexType name="ServiceConnectionForTheCauseOfDeathProvidingServiceConnectedNexusType">
        <xs:complexContent>
            <xs:extension base="MedicalOpinionRequestType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="ServiceConnectionForTheCauseOfDeathBasedOnVitalOrgan"
        substitutionGroup="MedicalOpinionRequest"
        type="ServiceConnectionForTheCauseOfDeathBasedOnVitalOrganType"/>
    <xs:complexType name="ServiceConnectionForTheCauseOfDeathBasedOnVitalOrganType">
        <xs:complexContent>
            <xs:extension base="MedicalOpinionRequestType">
                <xs:sequence>
                    <xs:element form="qualified" name="AllServiceConnectedDisabilities"
                        type="ServiceConnectedDisabilityCollectionType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="ServiceConnectionForCauseOfDeathBasedOnUSC1151"
        substitutionGroup="MedicalOpinionRequest"
        type="ServiceConnectionForCauseOfDeathBasedOnUSC1151Type"/>
    <xs:complexType name="ServiceConnectionForCauseOfDeathBasedOnUSC1151Type">
        <xs:complexContent>
            <xs:extension base="MedicalOpinionRequestType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="SouthwestAsiaBrainCancerMedicalOpinion"
        substitutionGroup="MedicalOpinionRequest" type="SouthwestAsiaBrainCancerMedicalOpinionType"/>
    <xs:complexType name="SouthwestAsiaBrainCancerMedicalOpinionType">
        <xs:complexContent>
            <xs:extension base="MedicalOpinionRequestType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="Combat" substitutionGroup="MedicalOpinionRequest" type="CombatType"/>
    <xs:complexType name="CombatType">
        <xs:complexContent>
            <xs:extension base="MedicalOpinionRequestType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="MedicalOpinionOther" substitutionGroup="MedicalOpinionRequest"
        type="MedicalOpinionOtherType"/>
    <xs:complexType name="MedicalOpinionOtherType">
        <xs:complexContent>
            <xs:extension base="MedicalOpinionRequestType"/>
        </xs:complexContent>
    </xs:complexType>
    <!-- ======================================================= -->
    <!-- =======================================================

         ExamAppointment Object Types

         ======================================================= -->
    <!-- ======================================================= -->
    <xs:complexType name="ExamAppointmentCollectionType">
        <xs:sequence>
            <xs:element maxOccurs="5" ref="ExamAppointment"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="ExamAppointment" type="ExamAppointmentType"/>
    <!--TODO: "this is provided for documentation only; no messages of this type should be sent as part of biz process"-->
    <xs:complexType name="ExamAppointmentType">
        <xs:annotation>
            <xs:documentation>This type is central to the domain model for exam management. Exams
                are direct medical                 evidence                 for a disability
                contention used to determine the current level of disability. Contentions often
                provide                 clarification and supporting attributes such as the related
                DBQ and major organs affected during the                 exam. An appointment gives
                a medical professional the opportunity to examine a veteran and/or veteran's
                records                 to evaluate the contention.             </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" name="ExamAppointmentStatusEvents"
                type="ExamAppointmentStatusEventCollectionType"/>
            <xs:element form="qualified" name="ExamRelatedContentionUuidCollection"
                type="UuidCollection"/>
        </xs:sequence>
        <xs:attribute name="examAppointmentUuid" type="UuidType" use="required"/>
        <xs:attribute name="examType" type="xs:string"/>
    </xs:complexType>
    <!-- ======================================================= -->
    <!-- =======================================================

         ExamAppointment Event Types

         ======================================================= -->
    <!-- ======================================================= -->
    <xs:complexType name="ExamAppointmentStatusEventCollectionType">
        <xs:sequence>
            <xs:element maxOccurs="5" ref="ExamAppointmentStatusEvent"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element abstract="true" name="ExamAppointmentStatusEvent"
        type="ExamAppointmentStatusEventType"/>
    <xs:complexType abstract="true" name="ExamAppointmentStatusEventType">
        <xs:annotation>
            <xs:documentation>Base abstract class for events pertaining to an appointment
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ExamManagementEventType">
                <xs:attribute name="examAppointmentUuid" type="UuidType" use="required">
                    <xs:annotation>
                        <xs:documentation>                             A universally unique
                            identifier that ties all status events to the ExamAppointment.
                        </xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element abstract="true" name="FaultyAppointmentScopedEvent"
        substitutionGroup="ExamAppointmentStatusEvent" type="ExamAppointmentStatusEventType"/>
    <xs:complexType name="AppointmentScopedFaultEventType">
        <xs:complexContent>
            <xs:extension base="ExamAppointmentStatusEventType">
                <xs:sequence>
                    <xs:element minOccurs="0" ref="FaultyAppointmentScopedEvent"/>
                </xs:sequence>
                <xs:attributeGroup ref="FaultDetailsAttributeGroup"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="AppointmentScheduledEventType">
        <xs:annotation>
            <xs:documentation>This is the first event in the appointment lifecycle. It carries all
                the information                 other systems need to recreate the same appointment
                as the event originator. Designates an event where                 an existing
                appointment is scheduled, including time, place, and examiner information.
                Multiple schedule events are allowed for a given appointment. Subsequent schedule
                events will be                 construed to be modifications.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ExamAppointmentStatusEventType">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="ExaminingFacility"
                        type="FacilityType"/>
                    <xs:element form="qualified" name="ExamRelatedContentionUuids"
                        type="UuidCollection"/>
                    <xs:element form="qualified" name="AppointmentPreferredExaminerGenderIndicator"
                        type="PreferredExaminerGenderIndicatorEnumeration"/>
                    <xs:element form="qualified" minOccurs="0"
                        name="AppointmentPreferredExaminerGender"
                        type="PreferredExaminerGenderEnumeration"/>
                    <xs:element form="qualified" name="nameOfExaminer" type="PersonNameType"/>
                </xs:sequence>
                <xs:attribute name="clinicianUniqueId" type="xs:string" use="required"/>
                <xs:attribute name="scheduledDateTime" type="xs:dateTime" use="required"/>
                <xs:attribute name="emsPointOfContact" type="xs:string"/>
                <xs:attribute name="examName" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="AppointmentCancelRequestEventType">
        <xs:annotation>
            <xs:documentation>Allow someone to request an appointment
                cancellation.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ExamAppointmentStatusEventType">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="1" name="CancellationReason"
                        type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="AppointmentCanceledEventType">
        <xs:annotation>
            <xs:documentation>Signifies that an appointment has actually been
                cancelled.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ExamAppointmentStatusEventType">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="1" name="CancellationReason"
                        type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="AppointmentCompletedEventType">
        <xs:annotation>
            <xs:documentation>When the scheduled appointment has been performed.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ExamAppointmentStatusEventType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="AppointmentRescheduleRequestedEventType">
        <xs:annotation>
            <xs:documentation>One of the parties to the appointment (either VBMS on behalf of the
                veteran, or the EMS)                 uses this                 event to signal a
                request to reschedule an appointment. If desired, use the Details element for free
                text describing                 a suggested time/place.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ExamAppointmentStatusEventType"/>
        </xs:complexContent>
    </xs:complexType>
    <!-- ======================================================= -->
    <!-- =======================================================

         ExamRelatedContention Objects

         ======================================================= -->
    <!-- ======================================================= -->
    <xs:complexType name="ExamRelatedContentionCollectionType">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="5" name="ExamRelatedContention"
                type="ExamRelatedContentionType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ExamRelatedContentionType">
        <xs:annotation>
            <xs:documentation>The claim of the participant in the voice of the claimant. Contentions
                include medical or                 dependency contentions.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" name="ContentionName" type="xs:string"/>
            <!-- As described by veteran-->
            <xs:element form="qualified" name="Classification" type="CodeNamePairType">
                <!-- As classified by VBA -->
                <xs:annotation>
                    <xs:documentation>Identifies the standard medical condition that is most closely
                        identified with the                         claimed contention.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="ExamAppointments"
                type="ExamAppointmentCollectionType"/>
            <xs:element form="qualified" minOccurs="0" name="ExistingDisabilities"
                type="ServiceConnectedDisabilityCollectionType"/>
            <xs:element form="qualified" minOccurs="0" name="ContentionNarrative"
                type="NarrativeCollectionType"/>
            <xs:element form="qualified" name="DbqRequests" type="DbqRequestCollectionType">
                <xs:annotation>
                    <xs:documentation>This is a loosely bound Cartesian product of all associated
                        DBQs, as they are                         needed for each of
                        the appointments associated with this contention.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="qualified" minOccurs="0" name="MedicalOpinionRequests"
                type="MedicalOpinionRequestCollection"/>
            <xs:element form="qualified" minOccurs="0" name="ContentionPrioritizationSpecialIssues"
                type="ContentionSpecialIssueCollectionType"/>
            <xs:element form="qualified" minOccurs="0" name="StandardLanguageEntries"
                type="StandardLanguageCollectionType"/>
            <xs:element form="qualified" minOccurs="0" name="ContentionScopeEvents"
                type="ContentionScopeEventCollectionType"/>
            <xs:element form="qualified" minOccurs="0" name="RemandSpecialistIndicator"
                type="RemandSpecialistIndicatorEnumeration"/>
            <xs:element form="qualified" minOccurs="0" name="RemandSpecialistType" type="xs:string"/>
            <xs:element form="qualified" name="ContentionPreferredExaminerGenderIndicator"
                type="PreferredExaminerGenderIndicatorEnumeration"/>
            <xs:element form="qualified" minOccurs="0" name="ContentionPreferredExaminerGender"
                type="PreferredExaminerGenderEnumeration"/>
        </xs:sequence>
        <xs:attribute name="examRelatedContentionUuid" type="UuidType" use="required"/>
        <xs:attribute name="contentionType" type="ContentionTypeEnumeration"/>
        <xs:attribute name="dodReferred" type="xs:boolean"/>
        <xs:attribute name="adjudicated" type="xs:boolean">
            <xs:annotation>
                <xs:documentation>Indicator in Corporate Database that indicates a Contention was
                    Rated and Adjudicated,                     which allows VBMS to send the
                    "Results Accepted by VBA" data point to VHA                 </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="aceEligible" type="xs:boolean" use="optional">
            <xs:annotation>
                <xs:documentation>Acceptable Clinical Evidence. That means that the doctor can give
                    a medical opinion                     based on                     existing
                    evidence (efolder documents, past examinations, etc) and doesn't need to see the
                    Veteran in person to perform an examination. So this indicator lets the examiner
                    know that, if                     VHA/VBA                     Contractor
                    management deems it acceptable, VBA is okay with an ACE exam being performed and
                    doesn't require a medical opinion from an in-person examination.
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
        <xs:attribute name="medicalOpinionNeeded" type="xs:boolean"/>
    </xs:complexType>
    <xs:complexType name="ReworkContentionCollectionType">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="5" name="ReworkContention"
                type="ReworkExamRelatedContentionType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ReworkExamRelatedContentionType">
        <xs:annotation>
            <xs:documentation>A subtype of ExamRelatedContention indicating its rework status.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ExamRelatedContentionType">
                <xs:sequence>
                    <xs:element form="qualified" maxOccurs="20" name="ReworkReason"
                        type="ExamReworkReasonType"/>
                    <xs:element form="qualified" minOccurs="0" name="ReworkReasonFreetext"
                        type="xs:string"/>
                </xs:sequence>
                <xs:attribute name="previouslyWorkedContentionUuid" type="UuidType" use="required"/>
                <xs:attribute name="clarification" type="xs:boolean" use="required"/>
                <xs:attribute name="insufficient" type="xs:boolean" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ContentionClarificationTextCollection">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="5" name="ContentionClarificationText"
                type="ContentionClarificationTextType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ContentionClarificationTextType">
        <xs:complexContent>
            <xs:extension base="NarrativeCollectionType">
                <xs:attribute name="contentionUuid" type="UuidType"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="UnclearContentionReferenceCollectionType">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="5" name="ContentionClarificationRequest"
                type="UnclearContentionReferenceType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="UnclearContentionReferenceType">
        <xs:annotation>
            <xs:documentation>A subtype of ExamRelatedContention indicating its need for
                clarification.                 Part of a Clarification request.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="ContentionClarificationFreeText"
                type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="contentionUuid" type="UuidType" use="required"/>
    </xs:complexType>
    <xs:complexType name="DbqRequestCollectionType">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="5" name="DbqRequest" type="DbqRequestType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="DbqRequestType">
        <xs:annotation>
            <xs:documentation>The name of the Disability Benefits Questionnaire requested.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="NarrativeCollectionType">
                <xs:attribute name="name" type="xs:string" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="StandardLanguageCollectionType">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="5" name="StandardLanguageEntry"
                type="StandardLanguageTextType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="StandardLanguageTextType">
        <xs:annotation>
            <xs:documentation>Boilerplate text that accompanies certain types.
            </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="title" type="xs:string"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="ContentionSpecialIssueCollectionType">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="7" name="ContentionSpecialIssue"
                type="ContentionSpecialIssueType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="ContentionSpecialIssueType">
        <xs:annotation>
            <xs:documentation>Contention Prioritization Special Issues</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="ALS"/>
            <xs:enumeration value="POW case for Protocol Exams"/>
            <xs:enumeration value="Gulf War Undiagnosed Illness Claim - Initial"/>
            <xs:enumeration value="1151 Claim and Tort Claim"/>
            <xs:enumeration value="Social and industrial surveys - O&amp;E"/>
            <xs:enumeration value="MST"/>
            <xs:enumeration value="BWAO"/>
            <xs:enumeration value="Foreign-Out-of-Network"/>
            <xs:enumeration value="PACT Act DIC Reevaluation"/>
            <xs:enumeration value="PACT"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="DeferralReasonType">
        <xs:annotation>
            <xs:documentation>Reason a contention as part of a group of contentions might be
                delayed.             </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="Insufficiency"/>
            <xs:enumeration value="Clarification"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="ContentionCancellationReasonType">
        <xs:annotation>
            <xs:documentation>Reasons a contention might be cancelled.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string"> </xs:restriction>
    </xs:simpleType>
    <xs:element abstract="true" name="FaultyContentionScopedEvent"
        substitutionGroup="ExamRelatedContentionEvent" type="ExamRelatedContentionEventType"/>
    <xs:complexType name="ContentionScopedFaultEventType">
        <xs:complexContent>
            <xs:extension base="ExamRelatedContentionEventType">
                <xs:sequence>
                    <xs:element minOccurs="0" ref="FaultyContentionScopedEvent"/>
                </xs:sequence>
                <xs:attributeGroup ref="FaultDetailsAttributeGroup"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="ContentionTypeEnumeration">
        <xs:restriction base="xs:string">
            <xs:enumeration value="NEW"/>
            <xs:enumeration value="INCREASE"/>
            <xs:enumeration value="SECONDARY"/>
            <xs:enumeration value="RFE"/>
            <xs:enumeration value="PENSION"/>
            <xs:enumeration value="REOPEN"/>
            <xs:enumeration value="HLR"/>
            <xs:enumeration value="SUP"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="RemandSpecialistIndicatorEnumeration">
        <xs:annotation>
            <xs:documentation>                 The Remand Specialist Indicator
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="Yes"/>
            <xs:enumeration value="No"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="DBQAlterationReasonType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="TRIGGERED"/>
            <xs:enumeration value="REMOVED"/>
            <xs:enumeration value="ADDED"/>
            <xs:enumeration value="REPLACED"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="DBQAlterationCommentsFreeTextType">
        <xs:restriction base="xs:string">
            <xs:maxLength value="250"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ======================================================= -->
    <!-- =======================================================

         ExamSchedulingRequest Related Events

         ======================================================= -->
    <!-- ======================================================= -->
    <xs:complexType name="ContentionScopeEventCollectionType">
        <xs:annotation>
            <xs:documentation>A collection of events that have occurred in the Contention scope.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element maxOccurs="5" ref="ExamRelatedContentionEvent"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element abstract="true" name="ExamRelatedContentionEvent"
        type="ContentionCancellationRequestedEventType"/>
    <xs:complexType abstract="true" name="ExamRelatedContentionEventType">
        <xs:annotation>
            <xs:documentation>A base type for all events relating to Contentions.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ExamManagementEventType">
                <xs:attribute name="examRelatedContentionUuid" type="UuidType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ContentionCancellationRequestedEventType">
        <xs:complexContent>
            <xs:annotation>
                <xs:documentation>Requesting a cancellation of a contention.
                </xs:documentation>
            </xs:annotation>
            <xs:extension base="ExamRelatedContentionEventType">
                <xs:sequence>
                    <xs:element form="qualified" name="ReasonForCancellation"
                        type="ContentionCancellationReasonType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ContentionCanceledEventType">
        <xs:complexContent>
            <xs:annotation>
                <xs:documentation>Contention was cancelled. Spread the word.
                </xs:documentation>
            </xs:annotation>
            <xs:extension base="ExamRelatedContentionEventType">
                <xs:sequence>
                    <xs:element form="qualified" name="ReasonForCancellation"
                        type="ContentionCancellationReasonType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ResultPackageAvailableEventType">
        <xs:annotation>
            <xs:documentation>Result package for one specific contention has been made available.
                Exam management work                 is complete for that contention.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ExamRelatedContentionEventType">
                <xs:sequence>
                    <xs:element form="qualified" maxOccurs="5" name="documentReferenceId"
                        type="xs:string">
                        <xs:annotation>
                            <xs:documentation>Refers to the
                                /Preview/Document/DocumentIdentification/IdentificationID of
                                a DBQ or ExamResponse
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="DBQAlterationReason" type="DBQAlterationReasonType"/>
                <xs:attribute name="DBQAlterationCommentsFreeText"
                    type="DBQAlterationCommentsFreeTextType"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- ======================================================= -->
    <!-- =======================================================

         ExamSchedulingRequest Related Objects

         ======================================================= -->
    <!-- ======================================================= -->
    <xs:complexType name="ExamSchedulingRequestType">
        <!--"This is not a message type used in biz processes; serves primarily as documentation"-->
        <xs:annotation>
            <xs:documentation>The "Request" object that is synchronized by events between
                systems.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element minOccurs="0" ref="ClaimInformation"/>
            <xs:element form="qualified" minOccurs="0" name="RequestScopeEvents"
                type="ExamSchedulingRequestEventCollection"/>
        </xs:sequence>
        <xs:attribute name="examSchedulingRequestUuid" type="UuidType" use="required"/>
    </xs:complexType>
    <xs:complexType name="StandardExamSchedulingRequestType">
        <!--"This is not a message type used in biz processes; serves primarily as documentation"-->
        <xs:complexContent>
            <xs:extension base="ExamSchedulingRequestType">
                <xs:sequence>
                    <xs:element form="qualified" name="Contentions"
                        type="ExamRelatedContentionCollectionType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ReworkExamSchedulingRequestType">
        <!--"This is not a message type used in biz processes; serves primarily as documentation"-->
        <xs:complexContent>
            <xs:extension base="ExamSchedulingRequestType">
                <xs:sequence>
                    <xs:element form="qualified" name="ReworkContentions"
                        type="ReworkContentionCollectionType"/>
                </xs:sequence>
                <xs:attribute name="originalExamRequestUuid" type="UuidType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="ExamCancellationReasonType">
        <xs:restriction base="xs:string"> </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="VeteranSpecialIssueCollectionType">
        <xs:sequence>
            <xs:element form="qualified" maxOccurs="16" name="VeteranSpecialIssue"
                type="VeteranSpecialIssueType"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="VeteranSpecialIssueType">
        <xs:annotation>
            <xs:documentation>Veteran Prioritization Special Issues</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="Homeless"/>
            <xs:enumeration value="Incarcerated Veteran"/>
            <xs:enumeration
                value="Veteran with known violent behavior or who potentially needs the presence of security while the exam is conducted"/>
            <xs:enumeration value="Veteran residing outside of US"/>
            <xs:enumeration value="Remand"/>
            <xs:enumeration value="BDD Exams for pregnant service member"/>
            <xs:enumeration value="Claims made concerning deceased Veteran that may need an opinion"/>
            <xs:enumeration value="Purple Heart"/>
            <xs:enumeration value="CLCW"/>
            <xs:enumeration value="85 Years of Age or Older"/>
            <xs:enumeration value="FDC Program"/>
            <xs:enumeration value="Terminal Illness"/>
            <xs:enumeration value="Financial Hardship"/>
            <xs:enumeration value="SI/SVI"/>
            <xs:enumeration value="Former Prisoner of War or Survivor"/>
            <xs:enumeration value="Medal of Honor"/>
        </xs:restriction>
    </xs:simpleType>
    <!-- ======================================================= -->
    <!-- =======================================================
         ClaimInformation types
         ======================================================= -->
    <!-- ======================================================= -->
    <xs:element abstract="true" name="ClaimInformation" type="ExamRelatedClaimInformationType"/>
    <xs:complexType abstract="true" name="ExamRelatedClaimInformationType">
        <xs:annotation>
            <xs:documentation>                 The subset of claim information for this workflow.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element form="qualified" minOccurs="0" name="VeteranServiceMemberInfo"
                type="VsmType"/>
            <xs:element form="qualified" minOccurs="0" name="SurvivorAndDependentInfo"
                type="SadType"/>
            <xs:element form="qualified" minOccurs="0" name="ClaimNarrative"
                type="NarrativeCollectionType"/>
        </xs:sequence>
        <xs:attribute name="claimDate" type="xs:date" use="required"/>
        <xs:attribute name="claimLabel" type="xs:string" use="required"/>
        <xs:attribute name="endProductCode" type="xs:string" use="required"/>
        <xs:attribute name="claimPayeeCode" type="xs:string" use="required"/>
        <xs:attribute name="survivorOrDependentPayeeCode" type="xs:string"/>
        <xs:attribute default="CP Live" name="benefitProgramType" type="BenefitType"/>
    </xs:complexType>
    <xs:element name="PostDischargeClaimInformation" substitutionGroup="ClaimInformation"
        type="PostDischargeClaimInformationType"/>
    <xs:complexType name="PostDischargeClaimInformationType">
        <xs:complexContent>
            <xs:extension base="ExamRelatedClaimInformationType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="PreDischargeClaimInformation" substitutionGroup="ClaimInformation"
        type="PreDischargeClaimInformationType"/>
    <xs:complexType abstract="true" name="PreDischargeClaimInformationType">
        <xs:annotation>
            <xs:documentation>                 A subtype of ExamRelatedClaimInformation indicating
                its pre-discharge type.             </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ExamRelatedClaimInformationType">
                <xs:attribute name="predischargeIntakeSite" type="xs:string" use="optional"/>
                <!-- not required for IDES for now -->
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="BDDClaimInformation" substitutionGroup="ClaimInformation"
        type="BDDClaimInformationType"/>
    <xs:complexType name="BDDClaimInformationType">
        <xs:complexContent>
            <xs:extension base="PreDischargeClaimInformationType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="BDDExcludedClaimInformation" substitutionGroup="ClaimInformation"
        type="BDDExcludedClaimInformationType"/>
    <xs:complexType name="BDDExcludedClaimInformationType">
        <xs:complexContent>
            <xs:extension base="PreDischargeClaimInformationType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="IDESClaimInformation" substitutionGroup="ClaimInformation"
        type="IDESClaimInformationType"/>
    <xs:complexType name="IDESClaimInformationType">
        <xs:complexContent>
            <xs:extension base="PreDischargeClaimInformationType">
                <xs:sequence>
                    <xs:element form="qualified" maxOccurs="1" minOccurs="0" name="PEBLO"
                        type="PersonType"/>
                    <xs:element form="qualified" maxOccurs="1" minOccurs="0" name="MSC"
                        type="PersonType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="QuickStartClaimInformation" substitutionGroup="ClaimInformation"
        type="QuickStartClaimInformationType"/>
    <xs:complexType name="QuickStartClaimInformationType">
        <xs:complexContent>
            <xs:extension base="PreDischargeClaimInformationType"/>
        </xs:complexContent>
    </xs:complexType>
    <!-- ======================================================= -->
    <!-- =======================================================

         ExamSchedulingRequest Event Types

         ======================================================= -->
    <!-- ======================================================= -->
    <xs:element abstract="true" name="ExamSchedulingRequestEvent"
        type="ExamSchedulingRequestEventType"/>
    <xs:complexType abstract="true" name="ExamSchedulingRequestEventType">
        <xs:annotation>
            <xs:documentation>This is the abstract base type for the "things that happen to an
                ExamSchedulingRequest".                 That is, only concrete subclasses are sent
                over the wire.             </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ExamManagementEventType"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:element abstract="true" name="FaultyRequestScopeEvent"
        substitutionGroup="ExamSchedulingRequestEvent" type="ExamSchedulingRequestEventType"/>
    <xs:complexType name="RequestScopedFaultEventType">
        <xs:complexContent>
            <xs:extension base="ExamSchedulingRequestEventType">
                <xs:sequence>
                    <xs:element minOccurs="0" ref="FaultyRequestScopeEvent"/>
                </xs:sequence>
                <xs:attributeGroup ref="FaultDetailsAttributeGroup"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- ======================================================= -->
    <!-- =======================================================
         ExamSchedulingRequestCreatedEventBaseType
         ======================================================= -->
    <!-- ======================================================= -->
    <xs:complexType abstract="true" name="ExamSchedulingRequestCreatedEventBaseType">
        <xs:annotation>
            <xs:documentation>This event type defines the message that goes over the wire to say
                that a new                 ExamSchedulingRequest has                 been created
                and is ready to be worked.             </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ExamSchedulingRequestEventType">
                <xs:sequence>
                    <xs:element ref="ClaimInformation"/>
                    <xs:element form="qualified" minOccurs="0"
                        name="ExamPrioritizationSpecialIssues"
                        type="VeteranSpecialIssueCollectionType"/>
                    <!-- extending types should include a collection of contentions here -->
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="contractIdType">
        <xs:restriction base="xs:string">
            <xs:minLength value="12"/>
            <xs:maxLength value="25"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="sensitivityLevelType">
        <xs:restriction base="xs:int">
            <xs:totalDigits value="2"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="ReworkExamSchedulingRequestCreatedEventType">
        <xs:annotation>
            <xs:documentation>A specialized version of a ExamSchedulingRequestEventType that stores
                reworked contentions and references the previously existing request that it
                replaces. Used exactly like the ExamSchedulingRequestEventType except it is
                assumed that the original examSchedulingRequest has been closed. Do
                not include contentions that were completed on the referenced original exam request.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ExamSchedulingRequestCreatedEventBaseType">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0"
                        name="AlternateDestinationJustification"
                        type="AlternateDestinationJustificationType"/>
                    <xs:element form="qualified" name="ExamReworkRelatedContentions"
                        type="ReworkContentionCollectionType"/>
                </xs:sequence>
                <!-- contains the examSchedulingRequestId of the original exam request being reworked -->
                <xs:attribute name="originalExamRequestUuid" type="UuidType"/>
                <xs:attribute name="contractId" type="contractIdType"/>
                <xs:attribute name="sensitivityLevel" type="sensitivityLevelType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ExamSchedulingRequestCreatedEventType">
        <xs:annotation>
            <xs:documentation>This event signifies a new ExamSchedulingRequestEvent has been
                created.             </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ExamSchedulingRequestCreatedEventBaseType">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0"
                        name="AlternateDestinationJustification"
                        type="AlternateDestinationJustificationType"/>
                    <xs:element form="qualified" name="ExamRelatedContentions"
                        type="ExamRelatedContentionCollectionType">
                        <xs:annotation>
                            <xs:documentation>                                 The collection of
                                contentions related to this request.
                            </xs:documentation>
                        </xs:annotation>
                    </xs:element>
                </xs:sequence>
                <xs:attribute name="contractId" type="contractIdType"/>
                <xs:attribute name="sensitivityLevel" type="sensitivityLevelType" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- ======================================================= -->
    <!-- =======================================================
         Clarification related events
         ======================================================= -->
    <!-- ======================================================= -->
    <xs:complexType abstract="true" name="ClarificationResponseBaseType">
        <xs:complexContent>
            <xs:extension base="ExamSchedulingRequestEventType">
                <xs:sequence>
                    <xs:element form="qualified" minOccurs="0" name="ClarificationText"
                        type="NarrativeCollectionType"/>
                    <xs:element form="qualified" minOccurs="0"
                        name="AlternateDestinationJustification"
                        type="AlternateDestinationJustificationType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType abstract="true" name="EditedRequestClarificationResponseEventBaseType">
        <xs:complexContent>
            <xs:extension base="ClarificationResponseBaseType">
                <xs:sequence>
                    <xs:element ref="ClaimInformation"/>
                    <xs:element form="qualified" minOccurs="0"
                        name="ExamPrioritizationSpecialIssues"
                        type="VeteranSpecialIssueCollectionType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="EditedRequestClarificationResponseEventType">
        <xs:complexContent>
            <xs:extension base="EditedRequestClarificationResponseEventBaseType">
                <xs:sequence>
                    <xs:element form="qualified" name="Contentions"
                        type="ExamRelatedContentionCollectionType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ReworkEditedRequestClarificationResponseEventType">
        <xs:complexContent>
            <xs:extension base="EditedRequestClarificationResponseEventBaseType">
                <xs:sequence>
                    <xs:element form="qualified" name="ReworkContentions"
                        type="ReworkContentionCollectionType"/>
                </xs:sequence>
                <xs:attribute name="originalExamSchedulingRequestUuid" type="UuidType"
                    use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="AddressChangeEventType">
        <xs:complexContent>
            <xs:extension base="ExamSchedulingRequestEventType">
                <xs:sequence>
                    <xs:choice>
                        <xs:element form="qualified" name="NewAddress" type="AddressType"/>
                        <xs:element form="qualified" name="NewPreferredGeographicLocation"
                            type="PreferredGeographicLocationType"/>
                    </xs:choice>
                    <xs:element form="qualified" minOccurs="0" name="newRegionalOffice"
                        type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ExamSchedulingRequestCancellationEventType">
        <xs:annotation>
            <xs:documentation>Used to schedule a cancellation request.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ExamSchedulingRequestEventType">
                <xs:sequence>
                    <xs:element form="qualified" name="ExamCancellationReason"
                        type="ExamCancellationReasonType"/>
                    <xs:element form="qualified" minOccurs="0" name="ExamCancellationReasonFreeText"
                        type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="SpecialInstructionsEventType">
        <xs:annotation>
            <xs:documentation>Free text field for special instructions.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ExamSchedulingRequestEventType"> </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ExamSchedulingRequestEventCollection">
        <xs:sequence>
            <xs:element maxOccurs="5" minOccurs="0" ref="ExamSchedulingRequestEvent"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="ExamRequestAcknowledgementEventType">
        <xs:annotation>
            <xs:documentation>Used to acknowledge receipt of an ExamSchedulingRequestCreatedEvent or
                ExamReworkSchedulingRequestCreatedEvent             </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ExamSchedulingRequestEventType"> </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ClarificationRequestEventType">
        <xs:annotation>
            <xs:documentation>Used to add clarifications to the request stack.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ExamSchedulingRequestEventType">
                <xs:sequence>
                    <xs:element form="qualified" name="ClarificationReason">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:maxLength value="250"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:element>
                    <xs:element form="qualified" name="PointOfContactPhone" type="PhoneType"/>
                    <xs:element form="qualified" minOccurs="0" name="UnclearContentionReferences"
                        type="UnclearContentionReferenceCollectionType"/>
                </xs:sequence>
                <xs:attribute name="dateOfRequest" type="xs:date"/>
                <xs:attribute name="pointOfContactName" type="xs:string" use="required"/>
                <xs:attribute name="clarificationReasonFreeText" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="ExamSchedulingRequestCompleteEventType">
        <xs:annotation>
            <xs:documentation>Used to acknowledge ExamSchedulingRequest is complete.
            </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ExamSchedulingRequestEventType"> </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- Exam Document Manifest -->
    <xs:complexType name="VeteranDocumentManifestEventType">
        <xs:annotation>
            <xs:documentation>                 This event type defines the manifest message for
                documents related to an ESR.                 The manifest is in the message stack as
                it extends ExamManagementEventType.             </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ExamSchedulingRequestEventType">
                <xs:sequence>
                    <xs:element form="qualified" maxOccurs="10" minOccurs="1" name="DocumentId"
                        nillable="false" type="xs:string"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- Veteran Document -->
    <xs:complexType name="VeteranDocumentEventType">
        <xs:annotation>
            <xs:documentation>                 This encapsulates the document metadata and the list
                of annotations and bookmarks.                 Note: the ManifestEventUuid is the
                UUID of the VeteranDocumentManifestMessage event.             </xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ExamSchedulingRequestEventType">
                <xs:sequence>
                    <xs:element form="qualified" maxOccurs="1" minOccurs="1"
                        name="ManifestEventUuid" type="UuidType"/>
                    <xs:element form="qualified" maxOccurs="1" minOccurs="1" name="Attachment"
                        type="DocumentAttachmentType"/>
                    <xs:element form="qualified" maxOccurs="5" minOccurs="0" name="Annotation"
                        type="DocumentAnnotationType"/>
                    <xs:element form="qualified" maxOccurs="5" minOccurs="0" name="Bookmark"
                        type="DocumentBookmarkType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!-- ======================================================= -->
    <!-- =======================================================
         Misc Events
         ======================================================= -->
    <!-- ======================================================= -->
    <!-- ======================================================= -->
    <!-- =======================================================

           Fault Group

         ======================================================= -->
    <!-- ======================================================= -->
    <xs:element name="TransportFaultEvent" substitutionGroup="FaultEvent"
        type="TransportFaultEventType"/>
    <!-- ======================================================= -->
    <!-- =======================================================

           ExamSchedulingRequestEvent Group

         ======================================================= -->
    <!-- ======================================================= -->
    <xs:element name="ExamRequestAcknowledgementEvent"
        substitutionGroup="ExamSchedulingRequestEvent" type="ExamRequestAcknowledgementEventType"/>
    <xs:element name="ExamSchedulingRequestCreatedEvent"
        substitutionGroup="ExamSchedulingRequestEvent" type="ExamSchedulingRequestCreatedEventType"/>
    <xs:element name="ReworkExamSchedulingRequestCreatedEvent"
        substitutionGroup="ExamSchedulingRequestEvent"
        type="ReworkExamSchedulingRequestCreatedEventType"/>
    <xs:element name="ClarificationRequestEvent" substitutionGroup="ExamSchedulingRequestEvent"
        type="ClarificationRequestEventType"/>
    <xs:element name="RequestScopedFaultEvent" substitutionGroup="ExamSchedulingRequestEvent"
        type="RequestScopedFaultEventType"/>
    <xs:element name="EditedRequestClarificationResponseEvent"
        substitutionGroup="ExamSchedulingRequestEvent"
        type="EditedRequestClarificationResponseEventType"/>
    <xs:element name="ReworkEditedRequestClarificationResponseEvent"
        substitutionGroup="ExamSchedulingRequestEvent"
        type="ReworkEditedRequestClarificationResponseEventType"/>
    <xs:element name="AddressChangeEvent" substitutionGroup="ExamSchedulingRequestEvent"
        type="AddressChangeEventType"/>
    <xs:element name="ExamSchedulingRequestCancellationEvent"
        substitutionGroup="ExamSchedulingRequestEvent"
        type="ExamSchedulingRequestCancellationEventType"/>
    <xs:element name="SpecialInstructionsEvent" substitutionGroup="ExamSchedulingRequestEvent"
        type="SpecialInstructionsEventType"/>
    <xs:element name="VeteranDocumentManifestEvent" substitutionGroup="ExamSchedulingRequestEvent"
        type="VeteranDocumentManifestEventType"/>
    <xs:element name="VeteranDocumentEvent" substitutionGroup="ExamSchedulingRequestEvent"
        type="VeteranDocumentEventType"/>
    <!-- ======================================================= -->
    <!-- =======================================================

           ExamRelatedContentionEvent Group

         ======================================================= -->
    <!-- ======================================================= -->
    <xs:element name="ContentionCancellationRequestedEvent"
        substitutionGroup="ExamRelatedContentionEvent"
        type="ContentionCancellationRequestedEventType"/>
    <xs:element name="ContentionCanceledEvent" substitutionGroup="ExamRelatedContentionEvent"
        type="ContentionCanceledEventType"/>
    <xs:element name="ResultPackageAvailableEvent" substitutionGroup="ExamRelatedContentionEvent"
        type="ResultPackageAvailableEventType"/>
    <xs:element name="ContentionScopedFaultEvent" substitutionGroup="ExamRelatedContentionEvent"
        type="ContentionScopedFaultEventType"/>
    <!-- ======================================================= -->
    <!-- =======================================================

           ExamAppointmentStatusEvent Group

         ======================================================= -->
    <!-- ======================================================= -->
    <xs:element name="AppointmentScheduledEvent" substitutionGroup="ExamAppointmentStatusEvent"
        type="AppointmentScheduledEventType"/>
    <xs:element name="AppointmentCancelRequestEvent" substitutionGroup="ExamAppointmentStatusEvent"
        type="AppointmentCancelRequestEventType"/>
    <xs:element name="AppointmentCanceledEvent" substitutionGroup="ExamAppointmentStatusEvent"
        type="AppointmentCanceledEventType"/>
    <xs:element name="AppointmentCompletedEvent" substitutionGroup="ExamAppointmentStatusEvent"
        type="AppointmentCompletedEventType"/>
    <xs:element name="RescheduleRequestEvent" substitutionGroup="ExamAppointmentStatusEvent"
        type="AppointmentRescheduleRequestedEventType"/>
    <xs:element name="AppointmentScopedFaultEvent" substitutionGroup="ExamAppointmentStatusEvent"
        type="AppointmentScopedFaultEventType"/>
    <xs:element name="ExamManagementEventNotification" type="ExamManagementEventNotificationType"/>
    <xs:complexType name="ExamManagementEventNotificationType">
        <xs:annotation>
            <xs:documentation>This is a wrapper for a single ExamManagement event object. This
                notification will be used in transport-layer, routing capability. This
                object is designed to allow either a point-to-point or a pub-sub style
                exchange, allowing only a single originator but multiple destinations.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="OriginatingSystem" type="ParticipatingSystemType">
                <xs:annotation>
                    <xs:documentation>The originating system of the notification. Provided for
                        routing purposes. In most cases this will                         be the
                        same as the ExamManagementEventType::eventSource field.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element maxOccurs="100" minOccurs="0" name="Destination"
                type="ParticipatingSystemType">
                <xs:annotation>
                    <xs:documentation>The destination for the Notification. If this element is
                        missing                         the sender of the event assumes that it will
                        be broadcast to all                         parties. This ensures that
                        "spoke" systems can broadcast events                         without having
                        to know every possible recipient, and it relies on
                        DAS to send it to everyone.                     </xs:documentation>
                </xs:annotation>
            </xs:element>
                <xs:element ref="ExamSchedulingRequestEvent"/>
                <xs:element ref="ExamRelatedContentionEvent"/>
                <xs:element ref="ExamAppointmentStatusEvent"/>
                <xs:element ref="FaultEvent"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
