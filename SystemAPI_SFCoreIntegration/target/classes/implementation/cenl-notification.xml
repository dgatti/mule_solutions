<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json-logger="http://www.mulesoft.org/schema/mule/json-logger" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/json-logger http://www.mulesoft.org/schema/mule/json-logger/current/mule-json-logger.xsd">
	<sub-flow name="content-version-by-s3Id-main-flow" doc:id="5b556873-3e19-4a4c-a52b-e455993cc1e9" >
		<flow-ref doc:name="main-query-content-document-link-object-by-param-flow" doc:id="7400cc3f-90fb-41a1-8f59-04f1940113a8" name="main-query-content-document-link-object-by-param-flow" target="ContentDocumentLinkResp"/>
		<choice doc:name="contentDocumentId?" doc:id="92739c46-1c2a-4e99-8c6a-2c02b79f8407" >
			<when expression="#[!isEmpty(vars.ContentDocumentLinkResp.contentDocumentId[0])]">
				<set-variable value="#[(vars.ContentDocumentLinkResp maxBy $.SystemModstamp).contentDocumentId]" doc:name="contentDocumentId" doc:id="9a4ae973-2143-44f2-9627-5fe088b9bf18" variableName="contentDocumentId"/>
				<salesforce:query doc:name="ContentDocument" doc:id="94e6de14-605b-4bb5-b94c-0c2dfb11ea3b" config-ref="salesforceConfig" readTimeout="#[5000]" readTimeoutUnit="SECONDS" >
					<salesforce:salesforce-query ><![CDATA[SELECT Id, LatestPublishedVersionId FROM ContentDocument WHERE Id in (':param')]]></salesforce:salesforce-query>
					<salesforce:parameters ><![CDATA[#[output application/java
---
{
	param : vars.contentDocumentId
}]]]></salesforce:parameters>
				</salesforce:query>
				<ee:transform doc:name="ContentDocumentResp" doc:id="c99d949d-3a66-45c2-9e10-3e84fb43c02c" >
					<ee:message >
					</ee:message>
					<ee:variables >
						<ee:set-variable variableName="ContentDocumentResp" ><![CDATA[%dw 2.0
output application/json
---
payload map {
	id: $.Id,
	LatestPublishedVersionId: $.LatestPublishedVersionId
}]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<choice doc:name="LatestPublishedVersionId" doc:id="9eabad92-9c49-4841-836b-be792edb926e" >
					<when expression="#[!isEmpty(vars.ContentDocumentResp.LatestPublishedVersionId[0])]">
						<set-variable value="#[(vars.ContentDocumentResp.LatestPublishedVersionId joinBy &quot;','&quot;)]" doc:name="LatestPublishedVersionId" doc:id="6fd8c540-289e-464b-80c3-bcf195345601" variableName="LatestPublishedVersionId"/>
						<salesforce:query doc:name="ContentDocument" doc:id="a9857a47-fb80-47b0-8526-8c4d9dc0d485" config-ref="salesforceConfig" readTimeout="#[5000]" readTimeoutUnit="SECONDS" >
							<salesforce:salesforce-query ><![CDATA[Select PathOnClient, FileType, VersionData from ContentVersion Where Id in (':param')]]></salesforce:salesforce-query>
							<salesforce:parameters ><![CDATA[#[output application/java
---
{
	param : vars.LatestPublishedVersionId
}]]]></salesforce:parameters>
						</salesforce:query>
<!-- [STUDIO:"ContentDocumentResp"]						<ee:transform doc:name="ContentDocumentResp" doc:id="ed472b70-937f-4072-bc72-889a210598fd" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output application/json
&#45;&#45;-
payload map {
	FileType: $.FileType,
	PathOnClient: $.PathOnClient,
	VersionData: $.VersionData
}&#93;&#93;></ee:set-payload>
							</ee:message>
							<ee:variables >
							</ee:variables>
						</ee:transform> [STUDIO] -->
						<ee:transform doc:name="VarDefinitions" doc:id="aa773242-1090-4fd2-b599-cf0a692b63e1" >
							<ee:message />
							<ee:variables >
								<ee:set-variable variableName="content" ><![CDATA[%dw 2.0
import * from dw::core::Binaries
output application/octet-stream
---
//fromBase64(payload[0].VersionData as String) as Binary
payload[0].VersionData
]]></ee:set-variable>
								<ee:set-variable variableName="file" ><![CDATA[%dw 2.0
output application/java
---
//((payload[0].PathOnClient splitBy  ".")[0] ++ "-" ++ vars.contentDocumentId ++ ".") ++ ((payload[0].PathOnClient splitBy  ".")[1])

payload[0].PathOnClient]]></ee:set-variable>
								<ee:set-variable variableName="name" ><![CDATA[%dw 2.0
output application/java
---
(payload[0].PathOnClient splitBy  ".")[0]]]></ee:set-variable>
							</ee:variables>
						</ee:transform>
						<ee:transform doc:name="multipartFormData" doc:id="5328cd5c-4ca2-43b5-bfc1-804ac2534262" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
import dw::module::Multipart    
output multipart/form-data
---

{
	"parts": {
		"name": {
			"headers": {
				"Content-Disposition": {
					"name": "name",
					"contentDocumentId": vars.contentDocumentId,
					"subtype": "form-data"
				}
			},
			"content": vars.name
		},
		"file": {
			"headers": {
				"Content-Disposition": {
					"name": "file",
					"filename": vars.file,
					"contentDocumentId": vars.contentDocumentId,
					"subtype": "form-data"
				},
				"Content-Type": "application/octet-stream"
			},
			"content": vars.content
		}
	}
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
					</when>
					<otherwise >
						<ee:transform doc:name="Resource not found" doc:id="0c99ae00-b322-418f-8e01-cb9b86ca488d" >
							<ee:message >
								<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
    "message": "Resource not found"
}]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<set-variable value="404" doc:name="404" doc:id="0732be15-2605-4cac-882c-89b58bb301de" variableName="httpstatus" />
					</otherwise>
				</choice>
			</when>
			<otherwise >
				<ee:transform doc:name="Resource not found">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
    "message": "Resource not found"
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
				<set-variable value="404" doc:name="404" doc:id="5f4073cd-3f2f-4fc9-8bd4-05888e6ad652" variableName="httpstatus"/>
			</otherwise>
		</choice>
	</sub-flow>
	<sub-flow name="put-cenl-notification-main-flow" doc:id="eaec5e04-1cb7-406b-8bc7-9673ce1d68e8" >
		<json-logger:logger doc:name="Logger" doc:id="b5d1cc14-b995-4fa2-9322-3fe15ff7f1cb" config-ref="jsonLoggerConfig" message='"Update CENL Notification Process Begin"' />
		<set-variable value="#[payload]" doc:name="origPayload" doc:id="d5307bbb-9675-4c0d-83c1-3cfb7eabf07b" variableName="origPayload"/>
		<ee:transform doc:name="map Request" doc:id="1e172074-500b-417d-92bb-b352f9b0fd1b">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
payload map

    {
        
        
        "Id": $.notificationId,
        "ProcessedbyMule__c": ($.ProcessedbyMule__c default true)
    }]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<try doc:name="Try" doc:id="9502ce66-3de8-4201-9bb0-8887ba5e3ef7" >
			<salesforce:update doc:name="Update" doc:id="6c15f26d-61e7-45dc-ad7a-9be5bf1638d7" config-ref="salesforceConfig" type="Notification__c"/>
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="45dd44b8-c985-4cfb-8a1b-fed8dad24084" >
					<ee:transform doc:name="MapError Resp" doc:id="5fddae39-0b9c-471b-9ae3-e8610eaf5f82">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
    "status": "Error",
    "description" : error.detailedDescription
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<set-variable value="500" doc:name="httpstatus" doc:id="3740ace5-001c-4b21-8ea6-06796ef94284" variableName="httpstatus" />
				</on-error-propagate>
			</error-handler>
		</try>
		<ee:transform doc:name="MapResponse" doc:id="563b7255-597b-44b1-862f-827a02020c9e" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
vars.origPayload map (item, index) -> {
	
notificationId: item.notificationId,
(status: 'Success') if !isEmpty(((payload.items.payload.id)[index])),	
(status: 'Error') if isEmpty(((payload.items.payload.id)[index])),
(errorMsg: (payload.items.message)[index]) if isEmpty(((payload.items.payload.id)[index]))


} ]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<json-logger:logger doc:name="Logger" doc:id="c08d0766-9bbf-42f4-9c97-b1d500ae6193" config-ref="jsonLoggerConfig" message='"Update CENL Notification Process End"' />
	</sub-flow>
	<sub-flow name="get-cenl-notification-main-flow" doc:id="5b5321f9-7255-4f23-9be6-fe6f0be794e8" >
		<json-logger:logger doc:name="Logger" doc:id="31914348-7e1b-4ede-877c-b60febe063f1" config-ref="jsonLoggerConfig" message='"Get CENL Notification Process Begin"' />
		<try doc:name="Try" doc:id="85f1ab0f-705a-4580-b37d-fb88fc4ae559" >
			<salesforce:query doc:name="Query S3_Document__c" doc:id="d3d52498-3c1c-4abf-b40e-fcb56d45c50b" config-ref="salesforceConfig">
			<reconnect />
				<salesforce:salesforce-query><![CDATA[Select Id, Notification__c, Document_URL__c, ContentVersionId__c,ContentDocumentId__c,
Notification__r.Service_Appointment__r.Account.Map_Content_Doc_ID__c
From S3_Document__c 
WHERE Notification__r.Ground_Mail__c = true 
AND Notification__r.ProcessedbyMule__c = false]]></salesforce:salesforce-query>
		</salesforce:query>
			<error-handler >
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="ce691059-f22d-411e-bfd4-b27cedbb6356" >
					<ee:transform doc:name="MapError Resp" doc:id="57c654bd-1e9e-4ae9-96cd-56c181da1d40" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
    "status": "Error",
    "description" : error.detailedDescription
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<set-variable value="500" doc:name="httpstatus" doc:id="8ac72654-3847-437a-ac19-ee217de33b35" variableName="httpstatus" />
				</on-error-continue>
			</error-handler>
		</try>
		<ee:transform doc:name="MapResponse" doc:id="97098016-7bf4-4174-a06f-ebf4f76fdfdb" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload map 
{
    "s3DocumentId": $.Id,
    "documentURL": $.Document_URL__c,
    "notificationId": $.Notification__c,
    "contentDocumentId": $.ContentDocumentId__c,
    "contentVersionId" : $.ContentVersionId__c,
    "mapContentDocumentId": $.Notification__r.Service_Appointment__r.Account.Map_Content_Doc_ID__c
  }]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<json-logger:logger doc:name="Logger" doc:id="926c34a6-1175-4237-9f98-f986105488bf" config-ref="jsonLoggerConfig" message='"Get CENL Notification Process End"' />
	</sub-flow>
	<sub-flow name="main-query-notification-by-casenumber-flow" doc:id="15f4401d-0f5a-4f3e-a91d-899df0d7bd59" >
		<json-logger:logger doc:name="Log CaseNumber" doc:id="27537509-988f-480b-b9ef-4a8ba5edc81b" config-ref="jsonLoggerConfig" message="CaseNumber" tracePoint="BEFORE_REQUEST"/>
		<try doc:name="Try" doc:id="8282430f-a14c-4602-b40a-30509f4c6104" >
			<salesforce:query doc:name="Query Notification__c By CaseNumber" doc:id="cb6c0d6d-bae3-4b09-aa7a-50a726207433" config-ref="salesforceConfig" >
				<reconnect />
				<salesforce:salesforce-query ><![CDATA[select Id, Service_Appointment__c, Carrier__c, Tracking_Number__c, Emailed__c, Rejected__c
from Notification__c
where Service_Appointment__r.Exam__r.CaseNumber = ':param']]></salesforce:salesforce-query>
				<salesforce:parameters ><![CDATA[#[output application/java
---
{
	"param" : payload
}]]]></salesforce:parameters>
			</salesforce:query>
			<ee:transform doc:name="Transform To JSON" doc:id="53e687bd-6528-4495-8099-efe3339311e8" >
				<ee:message >
					<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
				</ee:message>
			</ee:transform>
			<error-handler >
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="e4453af9-1565-4493-9f47-f4dad1b2ae3e" >
					<set-variable value="500" doc:name="Set httpStatus" doc:id="4e5d53dd-16dd-4cda-955d-09ce4ed44247" variableName="httpStatus" />
					<json-logger:logger doc:name="Log Notification__c QUery Error" doc:id="06dd60e6-6acd-43b3-9069-d547ab199e4c" config-ref="jsonLoggerConfig" message="Notification__c Query Exception" tracePoint="EXCEPTION" priority="ERROR"/>
					<ee:transform doc:name="Transform Message" doc:id="6f4f315f-e44f-4925-8007-2e8adb6e563f" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	errorCode: "INTERNAL_SERVER_ERROR",
	errorMessage: error.description,
	transactionId: correlationId,
	timeStamp: now()
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
				</on-error-continue>
			</error-handler>
		</try>
	</sub-flow>
	<sub-flow name="main-update-notification-by-id-flow" doc:id="4324e26b-312f-4ad1-b7b8-a26d3033c5c4" >
		<json-logger:logger doc:name="Log Notification" doc:id="38d1ba84-55e5-4feb-936e-acebfa10a605" config-ref="jsonLoggerConfig" message="Notification Payload" tracePoint="BEFORE_REQUEST" />
		<try doc:name="Try" doc:id="a51ef99e-a889-4c74-b105-9c54b6f5ba54" >
			<salesforce:update type="Notification__c" doc:name="Update Notification" doc:id="425380bb-02f6-4f74-a7fd-f26213a4049d" config-ref="salesforceConfig" >
				<salesforce:records ><![CDATA[#[[payload]]]]></salesforce:records>
			</salesforce:update>
			<choice doc:name="Choice" doc:id="4a669d4d-4235-4cac-a728-fa1d2b2b8a22" >
				<when expression="#[payload.items[0].successful == true]">
					<ee:transform doc:name="Transform Message" doc:id="8a3be40a-5bc1-43d4-9b93-097ab5c2fe78">
				<ee:message>
					<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
  code: "OK",
  message: "Notification__c has been updated successfully"
}]]></ee:set-payload>
				</ee:message>
			</ee:transform>
				</when>
				<otherwise >
					<set-variable value="400" doc:name="Set Variable" doc:id="f4ba7c87-0fe2-4053-b3b6-0132e33832a8" variableName="httpStatus"/>
					<json-logger:logger doc:name="Log SF Result Error" doc:id="8d783711-7c30-4c46-bccb-ea6cc81beccc" config-ref="jsonLoggerConfig" message="Log SF Result Error" tracePoint="EXCEPTION" priority="ERROR">
						<json-logger:content ><![CDATA[#[output application/json ---
{
    payload: payload.items[0]
}]]]></json-logger:content>
					</json-logger:logger>
					<ee:transform doc:name="Transform Message" doc:id="0a0b47e5-4098-442b-ac12-b4851e6eee56" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	errorCode: "BAD_REQUEST",
	errorMessage: payload.items[0].exception.message,
	transactionId: correlationId,
	timeStamp: now()
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
				</otherwise>
			</choice>
			<error-handler >
				<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="24ca7e18-81a1-41a8-8b1c-43b6e478b980" >
					<json-logger:logger doc:name="Log Notification Error" doc:id="518da515-07a7-4a4e-9793-969442f5c635" config-ref="jsonLoggerConfig" message=" Notification Error" tracePoint="EXCEPTION" priority="ERROR"/>
					<set-variable value="500" doc:name="Set httpStatus" doc:id="9e78296c-bf77-4107-8349-9a6c2c549cad" variableName="httpStatus" />
					<ee:transform doc:name="Transform Message" doc:id="ddac30d7-51bf-4edb-8b60-b51ab83e0d07" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	errorCode: "INTERNAL_SERVER_ERROR",
	errorMessage: error.description,
	transactionId: correlationId,
	timeStamp: now()
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
				</on-error-propagate>
			</error-handler>
		</try>
	</sub-flow>
</mule>
