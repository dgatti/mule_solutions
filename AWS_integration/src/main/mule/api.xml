<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd   http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd   http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd   http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd  http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
    <validation:config name="Validation_Config" doc:name="Validation Config" doc:id="99c0921e-fadf-44c9-b500-16c303e04174" />
    <validation:config name="validationConfig" doc:name="Validation Config" doc:id="395fec04-08e1-4692-8b21-db9f97e4c259" />
    <flow name="vems-mule-aws-sapi-main">
        <http:listener config-ref="apiHttpListenerConfig" path="/api/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:body><![CDATA[#[payload]]]></http:body>
                <http:headers><![CDATA[#[vars.outboundHeaders default {}]]]></http:headers>
            </http:error-response>
        </http:listener>
        <apikit:router config-ref="apiConfig" />
    </flow>
    <flow name="get:\s3\objects:apiConfig">
        <set-variable value="#[attributes.queryParams.key]" doc:name="Set S3 Key" doc:id="cfb66be2-e635-4eef-a1b9-b476d3d90e79" variableName="s3ObjectKey" />
        <flow-ref doc:name="Get s3 object - Core" doc:id="cc7adaef-2dbd-4295-8d27-9361d964c550" name="get-s3object-core" />
        <choice doc:name="File exists?" doc:id="fa4657c1-3808-494f-91b1-cc0c2a82f26a">
            <when expression="#[vars.fileExists]">
                <flow-ref doc:name="Prepare file output" doc:id="ee2ee501-52da-4e88-a7bc-1aa74d2ca2c3" name="prepare-file-output" />
            </when>
        </choice>
    </flow>
    <flow name="post:\s3\objects:multipart\form-data:apiConfig">
        <flow-ref doc:name="Validate and Prepare File" doc:id="69b25fdf-11f2-4336-b0dc-c4b13f777b1d" name="validate-prepare-file" />
        <flow-ref doc:name="Create s3 object - Core" doc:id="75566f13-0a52-4db7-b417-292ab78da408" name="create-s3object-core" />
        <set-payload value="#[%dw 2.0&#xA;&#xA;output json&#xA;&#xA;var s3UrlObject = &quot;https://&quot; ++ Mule::p('app.datsi.aws.s3.bucket') ++ &quot;.s3.&quot; ++ Mule::p('app.datsi.aws.s3.region') ++ &quot;.amazonaws.com/&quot; ++ vars.s3ObjectKey as String&#xA;&#xA;---&#xA;{&#xA; url: s3UrlObject,&#xA;  message: &quot;File has been uploaded&quot;&#xA;}]" doc:name="Build Response" doc:id="05ad0212-1d0d-4776-8b22-846980a0d7ca" />
    </flow>
    <flow name="post:\postgresDB:application\json:apiConfig">
        <flow-ref doc:name="postgresDB-main-flow" doc:id="f625bc2b-663b-4a6e-881b-8ecc5ff77242" name="postgresDB-main-flow" />
    </flow>
    <flow name="get:\s3\objects\pnm:apiConfig">
        <set-variable value="#[attributes.queryParams.key]" doc:name="Set S3 Key" doc:id="c21a2c36-c630-494b-827c-b6fba50eabec" variableName="s3ObjectKey" />
        <flow-ref doc:name="Get s3 object - PNM" doc:id="10440223-9d91-4806-90a7-2b5a4278f2dc" name="get-s3object-pnm" />
        <choice doc:name="File exists?" doc:id="56522464-907e-4a3d-accf-f44c993ed3d3">
            <when expression="#[vars.fileExists]">
                <flow-ref doc:name="Prepare file output" doc:id="0c5f70dd-e91b-49b7-b3c6-a9503f3b33c8" name="prepare-file-output" />
            </when>
        </choice>
    </flow>
    <flow name="post:\s3\objects\pnm:multipart\form-data:apiConfig">
        <flow-ref doc:name="Validate and Prepare File" doc:id="c282bcaa-304d-41f2-a9dc-35c726dfebe7" name="validate-prepare-file" />
        <flow-ref doc:name="Create s3 object - PNM" doc:id="83b05e18-0a40-403a-9431-a3dd767f081d" name="create-s3object-pnm" />
        <set-payload value="#[%dw 2.0&#xA;&#xA;output json&#xA;&#xA;var s3UrlObject = &quot;https://&quot; ++ Mule::p('app.pnm.aws.s3.bucket') ++ &quot;.s3.&quot; ++ Mule::p('app.pnm.aws.s3.region') ++ &quot;.amazonaws.com&quot; ++ p('app.pnm.aws.s3.folder') ++ vars.s3ObjectKey as String&#xA;&#xA;---&#xA;{&#xA; url: s3UrlObject,&#xA;  message: &quot;File has been uploaded&quot;&#xA;}]" doc:name="Build Response" doc:id="f64ad30a-9ed7-4a50-a08e-19cee4f68299" />
        <logger level="INFO" message="get:\s3\objects\pnm:apiConfig" />
    </flow>
    <flow name="get:\s3\bucket:apiConfig">
        <set-variable value="#[%dw 2.0&#xA;&#xA;var param = attributes.queryParams.'key' splitBy(/\//)&#xA;&#xA;output application/json&#xA;---&#xA;param[0]]" doc:name="Set Bucket" doc:id="a15c3c13-a270-40c1-8d6f-2efbf14ad003" variableName="bucket" />
        <set-variable value="#[%dw 2.0&#xA;import * from dw::core::Strings&#xA;&#xA;var limit1 = attributes.queryParams.'key' indexOf &quot;/&quot;&#xA;var limit2 = attributes.queryParams.'key' lastIndexOf &quot;/&quot;&#xA;&#xA;output application/json&#xA;---&#xA;if(limit1 == -1)&#xA; null&#xA;else&#xA; substring(attributes.queryParams.'key', limit1, limit2)]" doc:name="Set Prefix" doc:id="fc9f21bc-d85b-45d1-b802-0749f06bc727" variableName="prefix" />
        <flow-ref doc:name="list-bucket-objects-core" doc:id="78ab37db-3c04-4874-a3db-21ec8c9fbbae" name="list-bucket-objects-core" />
        <ee:transform doc:name="Transform Message" doc:id="1eb1a6b0-a3bf-4843-a1c0-607cee7c03ea">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map {
	size: $.size,
	lastModified: $.lastModified,
	key: $.key,
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
    </flow>
    <flow name="post:\s3\bucket\copy:application\json:apiConfig">
        <validation:is-true doc:name="Is true" doc:id="c3eca0bc-f592-4aa3-b4af-e29e7f9d9f0b" config-ref="Validation_Config" expression="#[sizeOf(payload) &gt; 0]" message="Payload is invalid" />
        <flow-ref doc:name="copy-file-to-new-folder" doc:id="fce548d9-322d-4d76-8797-431c158afe65" name="copy-file-to-new-folder" />
        <ee:transform doc:name="Transform Message" doc:id="d1ea61eb-2d4a-4aaf-8e61-236433b43269">
            <ee:message>
                <ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	recordId: payload.versionId,
	code: "FILE_COPIED_SUCCESSFULLY",
	message: "File has been copied to the new location successfully"
}]]></ee:set-payload>
            </ee:message>
        </ee:transform>
        <error-handler>
            <on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="04b97bdf-e5d2-45af-9e8e-6832b1f2b6dd" type="VALIDATION:INVALID_BOOLEAN">
                <set-variable value="400" doc:name="Set Variable" doc:id="61314084-3498-4712-995a-6d2689bde979" variableName="httpStatus" />
                <ee:transform doc:name="Transform Message" doc:id="df878e1e-716c-42a8-957b-2839ba80baa6">
                    <ee:message>
                        <ee:set-payload><![CDATA[%dw 2.0
output application/java
---
{
	errorCode: "INVALID_REQUEST",
	errroMessage: error.description,
	transactionId: correlationId,
	timeStamp: now()
}]]></ee:set-payload>
                    </ee:message>
                </ee:transform>
            </on-error-propagate>
        </error-handler>
    </flow>
    <flow name="delete:\s3\objects:apiConfig">
        <ee:transform doc:name="Transform Message" doc:id="3627de75-a7bb-427f-82d3-261efa205483" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	key: attributes.queryParams.key	
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<flow-ref doc:name="delete-object" doc:id="c18670a4-1732-40d5-b4df-168a277ceda5" name="delete-object"/>
		<ee:transform doc:name="Transform Message1" doc:id="27dc5078-3bc6-4034-b6b0-1ea0b739eb97" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	code: "OK",
	message: "File has been deleted successfully"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
    </flow>
</mule>
