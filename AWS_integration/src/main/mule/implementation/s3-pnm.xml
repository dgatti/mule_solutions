<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:json-logger="http://www.mulesoft.org/schema/mule/json-logger"
	xmlns:s3="http://www.mulesoft.org/schema/mule/s3"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/s3 http://www.mulesoft.org/schema/mule/s3/current/mule-s3.xsd
http://www.mulesoft.org/schema/mule/json-logger http://www.mulesoft.org/schema/mule/json-logger/current/mule-json-logger.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">

	<flow name="get-s3object-pnm"
		doc:id="8bd1486e-9d1f-4a4f-8b41-f0f685d5bfb3">
		<json-logger:logger doc:name="Log Request" doc:id="4d993d6b-dda6-4d8c-8d8c-4abacb595d93" config-ref="jsonLoggerConfig" message="GET S3 OBJECT">
			<json-logger:content ><![CDATA[#[import modules::JSONLoggerModule output application/json ---
{
    payload: JSONLoggerModule::stringifyNonJSON(vars.s3ObjectKey) 
}]]]></json-logger:content>
		</json-logger:logger>
		<try doc:name="Try" doc:id="9a188a5e-dbcb-4a1c-a7c6-dfc8da01b2eb" >
			<s3:get-object doc:name="Get Object" doc:id="5d79c935-8744-4717-9de5-5ccad1857870" config-ref="awsS3ConfigPNM" bucketName="${app.pnm.aws.s3.bucket}" key="#[p('app.pnm.aws.s3.folder') ++ vars.s3ObjectKey]">
			<repeatable-in-memory-stream />
			<reconnect count="3" />
		</s3:get-object>
			<set-variable value="#[true]" doc:name="Set fileExists" doc:id="49061612-a4bb-48f0-bebc-926bb9cd0512" variableName="fileExists" />
			<error-handler >
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="a801699c-505a-46d3-ab79-df57232f8fbb" type="S3:NO_SUCH_KEY" >
					<ee:transform doc:name="httpStatus and error payload" doc:id="787fe717-031c-4cc8-9814-b09da24674c2" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
    "error": {
        "code": "400",
        "reason": "NO_SUCH_KEY",
        "message": "The specified key [$(vars.s3ObjectKey)] does not exist",
        "transaction": correlationId
    }
}]]></ee:set-payload>
						</ee:message>
						<ee:variables >
							<ee:set-variable variableName="httpStatus" ><![CDATA[404]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
					<set-variable value="#[false]" doc:name="Set fileExists" doc:id="a8ca5653-c4c8-47ad-8623-bd3af9b00558" variableName="fileExists" />
				</on-error-continue>
			</error-handler>
		</try>
	</flow>
	
	
	<flow name="create-s3object-pnm" doc:id="b3d2ff49-ac30-4b74-8b76-3d2762df9bf7">
		<json-logger:logger doc:name="Log Request" doc:id="f81b5330-1337-4f9f-ac93-359162807275" config-ref="jsonLoggerConfig" message="PUT S3 OBJECT">
			<json-logger:content><![CDATA[#[import modules::JSONLoggerModule output application/json ---
{
    payload: JSONLoggerModule::stringifyNonJSON(vars.s3ObjectKey) 
}]]]></json-logger:content>
		</json-logger:logger>
		<s3:put-object doc:name="Put Object" doc:id="fefbeb02-7065-4e4b-9680-5a22a2fcdce1" config-ref="awsS3ConfigPNM" bucketName="${app.pnm.aws.s3.bucket}" storageClass="STANDARD" key="#[p('app.pnm.aws.s3.folder') ++ vars.s3ObjectKey]" />
	</flow>
	
	
	</mule>
